mmp MINUS #here the name of the MMP/ Meta-Measurement-Point is defined, it is used in the naming of resulting files, generated by this file
 
    register "MMP_MINUS" #entity name in the database
     
    section measurements: #here all the MPs/ Measurement-Points that will be used in the logic are defined
        mp1 reference "MP_SIMQL_DEMONSTRATION1" #mp1 is the name we use in the logic section to refer to it, "MP_SIMQL_DEMONSTRATION1" is the database entity name
        mp2 reference "MP_SIMQL_DEMONSTRATION2"
 
    section variables: #here the variables we want to use in the logic section are defined, we can define as many as we want/need, but only one can be saved in the end
        define x,y,result #multiple variables can be defined on a single line using ','
         
    section logic: #all the logic goes here

        x = LOAD DATA(ref=[mp1], refdates=["CREF"], qualityLevel="U4", range=LATEST) #a range of latest guarantees us that each key only holds one value
        y = LOAD DATA(ref=[mp2], refdates=["CREF"], qualityLevel="U4", range=LATEST) #the load data statement is similar to the compute data statement, but it doesnt require the user to perform an operation on the data and keeps the data loading seperate from the calculation
        result = COMPUTE DATA(variables=[x,y], math=MINUS) # result = x - y #this is the version for variables of the compute data statement, it only has the two parameters: "variables" and "math", as it does not perform a request to a database and instead uses local variables
    
    section result:
        save result #save our final result
     
end #MINUS