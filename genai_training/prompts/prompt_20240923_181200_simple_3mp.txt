#------------------------------------------------------------------------------
# autogenerated prompte file
# generated 2024-09-23 18:12:00
#------------------------------------------------------------------------------
prompt: Bitte Baue einen Metamesspunkt und verwende folgenden Registrierungsnamen '{mmp_name}'
Referenziere folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Hole Daten der drei Messpunkte  per der letzten drei Stichtage.Greife auf alle Datensätze zu.Aggregiere die Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Erstelle und verknüpfe '{mmp_name}'
Gebrauche drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
extrahiere Daten nutze der letzten zwei Jahren .Greife auf alle Datensätze zu.Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere Businesskey '{mmp_name}'
Greife auf  Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
verwende die Daten der drei Messpunkte per der letzten beiden Quartale.lade die letzten Datensätze.Berechne den größten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere diesen neuen Metamesspunkt referenziere mit '{mmp_name}'.
Greife auf Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze alle Datensätze. greife auf Daten zu per vorherigen Stichtag  .Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verknüpfe mit '{mmp_name}' und Kreiere einen neuen Metamesspunkt
Referenziere drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
lade alle Datensätze. Importiere die Daten zum der letzten beiden Quartale  .Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende Businesskey '{mmp_name}'
Benötigt werden drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
lade alle Datensätze. Hole Daten per vorherigen Stichtag  .Berechne die Standardabweichung der Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Erstelle Businesskey '{mmp_name}'
Erstelle drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade die frühesten Datensätze. verwende die Daten nutze Halbjahr aller Messpunkte.Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Implementiere mir einen MetaMesspunkt mit verknüpfe mit '{mmp_name}'.
Referenziere Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade alle Datensätze. verwende die Daten  der letzten zwei Jahren  .Aggregiere die Datensätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Greife auf diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum Importiere die Daten letzter Stichtag der Messpunkte.lade die frühesten Datensätze.Aggregiere die Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Baue mir einen MetaMesspunkt mit verwende '{mmp_name}'.
Nutze drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade die letzten Datensätze. Importiere die Daten per der letzten beiden Stichtage  .Berechne die Standardabweichung der Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche mir einen MetaMesspunkt mit verwende '{mmp_name}'.
Referenziere drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Importiere die Daten  vorletzter Stichtag .nutze jeden Datensatz.Berechne die Standardabweichung der Ergebnisse
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Entwerfe und verknüpfe '{mmp_name}'
Verwende folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Verwende die ältesten Datensätze. Lade Daten per der letzten drei Stichtage der drei Messpunkte.Berechne den kleinsten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche und verweise auf Metamesspunkt '{mmp_name}'.
Erstelle diese angegeben Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
verwende die Daten der Messpunkte  vorletzten Stichtag.lade jeden Datensatz.Berechne den kleinsten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Implementiere und nutze diesen '{mmp_name}'
Lade drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
Importiere die Daten aller Messpunkte  per letzten Stichtag.nutze den neusten Datensatz.Berechne den größten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verbinde mit '{mmp_name}' und Entwerfe einen neuen Metamesspunkt
Gebrauche drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
nutze den ersten Datensatz. extrahiere Daten zum vorherigen Stichtag  .Führe eine Multiplikation der Informationen durch
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere MetaMesspunkt '{mmp_name}'.
Lade diese angegeben drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
lade den letzten Datensatz. verwende die Daten per der letzten drei Stichtage der drei Messpunkte.Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Baue MetaMesspunkt '{mmp_name}'.
Setze diese folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum verwende die Daten aktuelles Quartal .Greife auf den ersten Datensatz zu.Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: referenziere mit '{mmp_name}' und Generiere einen neuen Metamesspunkt
Lade Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Verwende den aktuellesten Datensatz. verwende die Daten  der letzten drei Stichtage aller Messpunkte.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende Businesskey '{mmp_name}'
Gebrauche drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
nutze den neusten Datensatz. Importiere die Daten zum der letzten drei Stichtage aller Messpunkte.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel mir einen MetaMesspunkt mit verbinde '{mmp_name}'.
Benutze folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf Daten zu zum letztes Jahr .Verwende die ältesten Datensätze.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Implementiere und verwende '{mmp_name}'
Erstelle drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per verwende die Daten der letzten drei Jahren der drei Messpunkte.Greife auf den ersten Datensatz zu.Berechne den kleinsten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere diesen neuen Metamesspunkt nutze diesen '{mmp_name}'.
Setze diese diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade jeden Datensatz. verwende die Daten nutze Quartal der drei Messpunkte.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel und referenziere mit Metamesspunkt '{mmp_name}'.
Setze diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze Importiere die Daten letztes Halbjahr aller Messpunkte.Greife auf den letzten Datensatz zu.Addiere die Messerte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere diesen neuen Metamesspunkt verknüpfe '{mmp_name}'.
Greife auf Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per Hole Daten vorletzter Stichtag aller Messpunkte.nutze alle Datensätze.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche Businesskey '{mmp_name}'
Verwende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade den letzten Datensatz. Lade Daten zum vor zwei Monaten der Messpunkte.Aggregiere die Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe Businesskey '{mmp_name}'
Gebrauche drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
Hole Daten der drei Messpunkte  zum letzten Stichtag.lade alle Datensätze.Bilde das Produkt aller Messwert Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verknüpfe '{mmp_name}' und Erstelle einen neuen Metamesspunkt
Gebrauche drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
nutze greife auf Daten zu der letzten zwei Jahren .Greife auf alle Datensätze zu.Addiere die Datensätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Implementiere und referenziere mit '{mmp_name}'
Nutze drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Lade Daten aller Messpunkte   Vierteljahr.Greife auf den ersten Datensatz zu.Summiere alle Fakten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche Businesskey '{mmp_name}'
Erstelle drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf Daten zu per dieses Halbjahr .nutze die neusten Datensätze.Summiere alle Messerte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche MetaMesspunkt '{mmp_name}'.
Nutze diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze die Daten der drei Messpunkte zum der letzten drei Stichtage.nutze die ersten Datensätze.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte MetaMesspunkt '{mmp_name}'.
Setze diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze die Daten zum der letzten zwei Stichtage .lade die letzten Datensätze.Addiere die Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere MetaMesspunkt '{mmp_name}'.
Gebrauche Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze Hole Daten der letzten drei Stichtage aller Messpunkte.Greife auf den ersten Datensatz zu.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Benötigt werden folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Greife auf den ersten Datensatz zu. nutze die Daten  letztes Jahr  .Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende und verwende Metamesspunkt '{mmp_name}'.
Gebrauche diese angegeben Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
verwende die Daten  aktuelles Halbjahr .lade den letzten Datensatz.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verwende '{mmp_name}' und Verwende einen neuen Metamesspunkt
Lade folgende Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade die letzten Datensätze. Lade Daten zum dieses Halbjahr der drei Messpunkte.Addiere die Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe Businesskey '{mmp_name}'
Nutze folgende Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Hole Daten der Messpunkte  per der letzten beiden Halbjahre.Verwende die aktuellsten Datensätze.Berechne den größten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende MetaMesspunkt '{mmp_name}'.
Referenziere folgende drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
nutze jeden Datensatz. nutze die Daten per letztes Jahr der drei Messpunkte.Berechne den größten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Greife auf folgende drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
Hole Daten zum letztes Jahr .Verwende den ältesten Datensatz.Multipliziere die Ergebnisse
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Baue MetaMesspunkt '{mmp_name}'.
Erstelle folgende Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze den ersten Datensatz. nutze die Daten zum vorheriges Quartal aller Messpunkte.Addiere die Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche MetaMesspunkt '{mmp_name}'.
Verwende folgende drei drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
verwende die Daten nutze der letzten zwei Quartale .lade jeden Datensatz.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verknüpfe '{mmp_name}' und Kreiere einen neuen Metamesspunkt
Benutze folgende Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Greife auf den ersten Datensatz zu. greife auf alle Daten zu  Stichtag  .Berechne die Standardabweichung der Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere MetaMesspunkt '{mmp_name}'.
Benutze diese angegeben Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze alle Datensätze. Importiere die Daten zum vorletzten Stichtag aller Messpunkte.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere und verknüpfe mit Metamesspunkt '{mmp_name}'.
Benutze drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
nutze die Daten der Messpunkte zum letzter Monat.Greife auf den letzten Datensatz zu.Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe und verbinde Metamesspunkt '{mmp_name}'.
Benutze drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf Daten zu  der letzten beiden Halbjahre .lade die letzten Datensätze.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte diesen neuen Metamesspunkt verbinde '{mmp_name}'.
Lade diese angegeben drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
Greife auf den ersten Datensatz zu. Hole Daten zum der letzten beiden Halbjahre der Messpunkte.Berechne den größten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende mir einen MetaMesspunkt mit verbinde '{mmp_name}'.
Setze diese diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
 Importiere die Daten der letzten zwei Quartale der Messpunkte.Greife auf den ersten Datensatz zu.Summiere alle Datensätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Verwirkliche einen Metamesspunkt und verwende folgenden Registrierungsnamen '{mmp_name}'
Greife auf folgende drei drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
 verwende die Daten der letzten drei Stichtage .Greife auf alle Datensätze zu.Berechne die Standardabweichung der Ergebnisse
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte Businesskey '{mmp_name}'
Benötigt werden Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf alle Daten zu aller Messpunkte zum vorletzter Stichtag.nutze jeden Datensatz.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Gestalte einen Metamesspunkt und nutze folgenden Registrierungsnamen '{mmp_name}'
Lade  drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
nutze die Daten nutze vorheriges Halbjahr .Verwende die aktuellsten Datensätze.Berechne die Standardabweichung der Datensätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende mir einen MetaMesspunkt mit verweise auf '{mmp_name}'.
Gebrauche diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per nutze die Daten der letzten drei Jahren aller Messpunkte.lade die frühesten Datensätze.Berechne den größten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Baue und nutze '{mmp_name}'
Verwende diese angegeben drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze den neusten Datensatz. extrahiere Daten per vorletzten Stichtag der drei Messpunkte.Berechne den kleinsten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verknüpfe mit '{mmp_name}' und Baue einen neuen Metamesspunkt
Benötigt werden diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze Lade Daten letzten Stichtag .nutze den ersten Datensatz.Bilde das Produkt aller Messwert Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere mir einen MetaMesspunkt mit verknüpfe mit '{mmp_name}'.
Referenziere diese angegeben drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
verwende die Daten  aktuellen Stichtag .Verwende den aktuellesten Datensatz.Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere diesen neuen Metamesspunkt verknüpfe mit '{mmp_name}'.
Verwende diese angegeben drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
 Hole Daten der letzten zwei Halbjahre .Verwende den aktuellesten Datensatz.Berechne den kleinsten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende diesen neuen Metamesspunkt referenziere mit '{mmp_name}'.
Erstelle drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
verwende die Daten nutze letztes Jahr .Verwende jeden Datensatz.Berechne den kleinsten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Erstelle einen Metamesspunkt und benutze folgenden Registrierungsnamen '{mmp_name}'
Lade drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
greife auf Daten zu aller Messpunkte  per vorheriges Halbjahr.Greife auf den letzten Datensatz zu.Berechne den kleinsten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe und benutze Metamesspunkt '{mmp_name}'.
Gebrauche Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze den neusten Datensatz. Hole Daten nutze Halbjahr  .Berechne die Standardabweichung der Fakten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende diesen neuen Metamesspunkt verbinde mit '{mmp_name}'.
Referenziere diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade jeden Datensatz. verwende die Daten nutze vorletzten Stichtag  .Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Verwende einen Metamesspunkt und nutze diesen folgenden Registrierungsnamen '{mmp_name}'
Gebrauche diese angegeben drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Verwende den ältesten Datensatz. Hole Daten  vorheriges Quartal der Messpunkte.Berechne den kleinsten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verbinde mit '{mmp_name}' und Verwirkliche einen neuen Metamesspunkt
Verwende folgende drei drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
lade alle Datensätze. greife auf Daten zu  der letzten beiden Quartale der drei Messpunkte.Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Implementiere einen Metamesspunkt und referenziere mit folgenden Registrierungsnamen '{mmp_name}'
Benötigt werden drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum Lade Daten der letzten beiden Quartale aller Messpunkte.lade jeden Datensatz.Berechne die Standardabweichung der Ergebnisse
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Implementiere einen Metamesspunkt und verbinde mit folgenden Registrierungsnamen '{mmp_name}'
Greife auf drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Importiere die Daten der Messpunkte zum letztes Jahr.Greife auf alle Datensätze zu.Addiere die Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche MetaMesspunkt '{mmp_name}'.
Benötigt werden drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
extrahiere Daten der Messpunkte per letzten Stichtag.lade die frühesten Datensätze.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: referenziere mit '{mmp_name}' und Kreiere einen neuen Metamesspunkt
Referenziere Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade die letzten Datensätze. nutze die Daten per vor zwei Monaten aller Messpunkte.Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende Businesskey '{mmp_name}'
Setze diese diese drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
nutze den ersten Datensatz. nutze die Daten per vorletzter Stichtag der Messpunkte.Aggregiere die Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere und verweise auf Metamesspunkt '{mmp_name}'.
Gebrauche folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade den letzten Datensatz. nutze die Daten zum letztes Jahr aller Messpunkte.Addiere die Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: nutze '{mmp_name}' und Installiere einen neuen Metamesspunkt
Gebrauche diese angegeben Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze die Daten aller Messpunkte nutze der letzten zwei Jahren.nutze alle Datensätze.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche und referenziere mit Metamesspunkt '{mmp_name}'.
Referenziere drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Lade Daten aller Messpunkte  per Quartal.nutze den ersten Datensatz.Summiere alle Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Erstelle einen Metamesspunkt und benutze folgenden Registrierungsnamen '{mmp_name}'
Verwende diese angegeben drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
greife auf alle Daten zu zum letztes Quartal .Verwende den ältesten Datensatz.Berechne den größten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Greife auf Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
verwende die Daten der drei Messpunkte  zum der letzten drei Jahren.lade den ersten Datensatz.Aggregiere die Messerte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Bastel und referenziere mit '{mmp_name}'
Setze diese  drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
Verwende den aktuellesten Datensatz. Importiere die Daten nutze vorletzten Stichtag aller Messpunkte.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte Businesskey '{mmp_name}'
Benutze  Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf Daten zu der drei Messpunkte   vor zwei Monaten.nutze den ersten Datensatz.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere MetaMesspunkt '{mmp_name}'.
Greife auf folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Lade Daten der drei Messpunkte  aktuelles Quartal.lade alle Datensätze.Berechne die Standardabweichung der Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Baue MetaMesspunkt '{mmp_name}'.
Setze diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf Daten zu der Messpunkte   dieses Halbjahr.nutze den neusten Datensatz.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Generiere und verweise auf '{mmp_name}'
Gebrauche folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Hole Daten zum der letzten drei Jahren .nutze jeden Datensatz.Berechne die Standardabweichung der Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe MetaMesspunkt '{mmp_name}'.
Gebrauche Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Importiere die Daten aller Messpunkte zum aktuellen und letzter Stichtag.Verwende alle Datensätze.Multipliziere die Messerte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel und verbinde mit Metamesspunkt '{mmp_name}'.
Benötigt werden folgende drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
Importiere die Daten per der letzten beiden Quartale .nutze die neusten Datensätze.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Erstelle MetaMesspunkt '{mmp_name}'.
Nutze Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze den neusten Datensatz. Hole Daten  aktuelles Quartal  .Führe eine Multiplikation der Sätze durch
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende MetaMesspunkt '{mmp_name}'.
Greife auf folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Hole Daten der Messpunkte nutze vorletzter Stichtag.nutze den ersten Datensatz.Bilde das Produkt aller Datensatz Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Gebrauche folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
extrahiere Daten nutze letztes Quartal .nutze jeden Datensatz.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verknüpfe mit '{mmp_name}' und Installiere einen neuen Metamesspunkt
Setze diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum nutze die Daten der letzten drei Stichtage .Greife auf den letzten Datensatz zu.Aggregiere die Messerte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe MetaMesspunkt '{mmp_name}'.
Referenziere Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze die neusten Datensätze. Importiere die Daten  letztes Jahr der Messpunkte.Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere Businesskey '{mmp_name}'
Erstelle diese angegeben drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
greife auf alle Daten zu nutze der letzten beiden Halbjahre .nutze alle Datensätze.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende Businesskey '{mmp_name}'
Gebrauche Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf alle Daten zu aller Messpunkte  zum der letzten zwei Jahren.nutze jeden Datensatz.Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere diesen neuen Metamesspunkt verbinde mit '{mmp_name}'.
Setze diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
extrahiere Daten der Messpunkte nutze der letzten zwei Jahren.Verwende die ältesten Datensätze.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Baue einen Metamesspunkt und verwende folgenden Registrierungsnamen '{mmp_name}'
Lade drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
Greife auf den letzten Datensatz zu. Hole Daten per vorheriges Quartal der Messpunkte.Berechne die Standardabweichung der Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verknüpfe '{mmp_name}' und Verwirkliche einen neuen Metamesspunkt
Verwende drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
nutze Importiere die Daten aktuelles Quartal .Greife auf alle Datensätze zu.Berechne den größten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel MetaMesspunkt '{mmp_name}'.
Nutze diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum nutze die Daten Stichtag .lade den ersten Datensatz.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe diesen neuen Metamesspunkt verbinde mit '{mmp_name}'.
Referenziere drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
zum verwende die Daten letztes Halbjahr der Messpunkte.Greife auf alle Datensätze zu.Addiere die Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte mir einen MetaMesspunkt mit verbinde mit '{mmp_name}'.
Referenziere drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Hole Daten nutze letztes Halbjahr .lade die letzten Datensätze.Berechne die Standardabweichung der Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verwende '{mmp_name}' und Erstelle einen neuen Metamesspunkt
Setze diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze greife auf Daten zu der letzten drei Stichtage der drei Messpunkte.lade jeden Datensatz.Berechne die Standardabweichung der Messerte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Implementiere diesen neuen Metamesspunkt verbinde mit '{mmp_name}'.
Benötigt werden drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
nutze greife auf alle Daten zu der letzten drei Jahren .Verwende alle Datensätze.Bilde das Produkt aller Satz Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Setze diese  Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf alle Daten zu nutze der letzten beiden Halbjahre .nutze die neusten Datensätze.Bilde das Produkt aller Datensatz Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: nutze diesen '{mmp_name}' und Gestalte einen neuen Metamesspunkt
Verwende diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Verwende den aktuellesten Datensatz. greife auf alle Daten zu nutze vor zwei Monaten  .Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende diesen neuen Metamesspunkt verbinde mit '{mmp_name}'.
Referenziere folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf alle Daten zu nutze aktuelles Quartal .Verwende den aktuellesten Datensatz.Berechne die Standardabweichung der Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Verwende und verweise auf '{mmp_name}'
Benutze  Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade die frühesten Datensätze. greife auf alle Daten zu per letzten Stichtag  .Berechne den größten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Erstelle Businesskey '{mmp_name}'
Benutze drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf Daten zu per der letzten zwei Jahren .nutze alle Datensätze.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Implementiere einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Erstelle diese angegeben drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze Importiere die Daten letztes Jahr .Greife auf den ersten Datensatz zu.Berechne den größten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte Businesskey '{mmp_name}'
Referenziere drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
greife auf alle Daten zu zum vorletzten Stichtag .Verwende jeden Datensatz.Bilde das Produkt aller Satz Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere und verweise auf Metamesspunkt '{mmp_name}'.
Benötigt werden diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per extrahiere Daten Stichtag .lade jeden Datensatz.Berechne die Standardabweichung der Messerte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte MetaMesspunkt '{mmp_name}'.
Gebrauche folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Importiere die Daten per Stichtag .nutze jeden Datensatz.Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Implementiere und verknüpfe mit Metamesspunkt '{mmp_name}'.
Greife auf drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
verwende die Daten der drei Messpunkte  nutze letztes Quartal.nutze jeden Datensatz.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende Businesskey '{mmp_name}'
Setze diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum Hole Daten der letzten zwei Halbjahre .Verwende die ältesten Datensätze.Aggregiere die Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere MetaMesspunkt '{mmp_name}'.
Erstelle drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per verwende die Daten der letzten beiden Halbjahre .nutze den ersten Datensatz.Multipliziere die Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Baue Businesskey '{mmp_name}'
Referenziere diese angegeben drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
lade die frühesten Datensätze. greife auf alle Daten zu zum der letzten drei Jahren aller Messpunkte.Aggregiere die Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe MetaMesspunkt '{mmp_name}'.
Lade Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum extrahiere Daten letztes Halbjahr aller Messpunkte.nutze die ersten Datensätze.Berechne den kleinsten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende diesen neuen Metamesspunkt verknüpfe mit '{mmp_name}'.
Gebrauche Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Verwende den aktuellesten Datensatz. nutze die Daten zum Halbjahr  .Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Baue und nutze diesen '{mmp_name}'
Erstelle Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per greife auf Daten zu aktuelles Quartal .Verwende den aktuellesten Datensatz.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel diesen neuen Metamesspunkt referenziere mit '{mmp_name}'.
Verwende diese angegeben drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze die Daten aller Messpunkte  per letzten Stichtag.Verwende die aktuellsten Datensätze.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Benutze Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Greife auf alle Datensätze zu. Hole Daten per der letzten beiden Quartale der drei Messpunkte.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Entwerfe und verbinde '{mmp_name}'
Lade diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
 nutze die Daten letztes Jahr .lade jeden Datensatz.Addiere die Fakten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere und verwende Metamesspunkt '{mmp_name}'.
Erstelle Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per Lade Daten vorherigen Stichtag der drei Messpunkte.lade den letzten Datensatz.Berechne die Standardabweichung der Datensätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Erstelle einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Gebrauche folgende drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
zum verwende die Daten der letzten beiden Stichtage der Messpunkte.lade die letzten Datensätze.Berechne den kleinsten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere mir einen MetaMesspunkt mit verbinde mit '{mmp_name}'.
Benötigt werden  Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per Lade Daten der letzten beiden Stichtage aller Messpunkte.nutze alle Datensätze.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende mir einen MetaMesspunkt mit verknüpfe mit '{mmp_name}'.
Nutze folgende Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per verwende die Daten letztes Quartal .lade die frühesten Datensätze.Multipliziere die Messerte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche und verwende Metamesspunkt '{mmp_name}'.
Verwende diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade den letzten Datensatz. verwende die Daten nutze Quartal der drei Messpunkte.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe Businesskey '{mmp_name}'
Benötigt werden folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf alle Daten zu der Messpunkte   vorletzten Stichtag.Verwende die aktuellsten Datensätze.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere mir einen MetaMesspunkt mit nutze '{mmp_name}'.
Referenziere  drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
greife auf Daten zu der drei Messpunkte  nutze vorherigen Stichtag.Verwende jeden Datensatz.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende Businesskey '{mmp_name}'
Benötigt werden diese angegeben drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze die Daten der Messpunkte  vor zwei Monaten.Verwende den aktuellesten Datensatz.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Kreiere einen Metamesspunkt und verknüpfe folgenden Registrierungsnamen '{mmp_name}'
Verwende diese angegeben Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze jeden Datensatz. greife auf alle Daten zu per Quartal  .Bilde das Produkt aller Datensatz Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere Businesskey '{mmp_name}'
Lade folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Importiere die Daten der Messpunkte  letztem Monat.Verwende alle Datensätze.Aggregiere die Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Erstelle und referenziere mit '{mmp_name}'
Verwende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Importiere die Daten der drei Messpunkte  zum vor zwei Monaten.lade die frühesten Datensätze.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Verwirkliche und verbinde mit '{mmp_name}'
Erstelle diese drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
verwende die Daten der drei Messpunkte  per der letzten beiden Halbjahre.nutze den neusten Datensatz.Addiere die Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel Businesskey '{mmp_name}'
Nutze diese drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
nutze die Daten der drei Messpunkte nutze letztes Quartal.lade alle Datensätze.Berechne den kleinsten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwende und verbinde mit Metamesspunkt '{mmp_name}'.
Benutze folgende drei drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze jeden Datensatz. greife auf alle Daten zu zum letztes Jahr der drei Messpunkte.Aggregiere die Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Gebrauche Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum nutze die Daten letztes Jahr .Verwende alle Datensätze.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Erstelle einen Metamesspunkt und verbinde folgenden Registrierungsnamen '{mmp_name}'
Setze diese drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
nutze die Daten per der letzten zwei Halbjahre .lade alle Datensätze.Aggregiere die Ergebnisse
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Lade  drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Importiere die Daten zum der letzten beiden Quartale .Verwende die ältesten Datensätze.Summiere alle Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere und verbinde mit Metamesspunkt '{mmp_name}'.
Referenziere drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
zum Lade Daten Quartal aller Messpunkte.nutze jeden Datensatz.Berechne den kleinsten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verbinde mit '{mmp_name}' und Erstelle einen neuen Metamesspunkt
Verwende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Verwende die ältesten Datensätze. nutze die Daten  der letzten drei Jahren  .Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1','YREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: nutze diesen '{mmp_name}' und Kreiere einen neuen Metamesspunkt
Lade diese angegeben drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade den letzten Datensatz. extrahiere Daten zum vorheriger Stichtag der Messpunkte.Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche diesen neuen Metamesspunkt nutze diesen '{mmp_name}'.
Referenziere folgende drei drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
extrahiere Daten aller Messpunkte nutze vorletzter Stichtag.nutze die ersten Datensätze.Führe eine Multiplikation der Datensätze durch
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere diesen neuen Metamesspunkt nutze diesen '{mmp_name}'.
Referenziere diese angegeben Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Hole Daten per letztes Jahr .nutze alle Datensätze.Berechne die Standardabweichung der Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verbinde '{mmp_name}' und Gestalte einen neuen Metamesspunkt
Benötigt werden diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per verwende die Daten Vierteljahr der Messpunkte.lade alle Datensätze.Berechne den größten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte MetaMesspunkt '{mmp_name}'.
Referenziere diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade jeden Datensatz. Lade Daten nutze vorletzter Stichtag aller Messpunkte.Berechne die Standardabweichung der Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Implementiere und benutze Metamesspunkt '{mmp_name}'.
Verwende diese angegeben Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf Daten zu der Messpunkte  per aktuelles Quartal.Verwende den aktuellesten Datensatz.Führe eine Multiplikation der Datensätze durch
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: nutze diesen '{mmp_name}' und Implementiere einen neuen Metamesspunkt
Referenziere drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
greife auf alle Daten zu zum letztes Quartal .nutze den neusten Datensatz.Berechne die Standardabweichung der Fakten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Implementiere einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Lade diese drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
per Lade Daten der letzten beiden Quartale .nutze jeden Datensatz.Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Implementiere und verknüpfe Metamesspunkt '{mmp_name}'.
Verwende Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
extrahiere Daten zum der letzten beiden Quartale .lade den ersten Datensatz.Addiere die Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: nutze '{mmp_name}' und Implementiere einen neuen Metamesspunkt
Nutze folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze Importiere die Daten letztes Jahr .Verwende alle Datensätze.Berechne die Standardabweichung der Ergebnisse
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere diesen neuen Metamesspunkt verbinde '{mmp_name}'.
Benutze folgende Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum extrahiere Daten der letzten beiden Halbjahre der drei Messpunkte.nutze den neusten Datensatz.Berechne die Standardabweichung der Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Installiere einen Metamesspunkt und verbinde mit folgenden Registrierungsnamen '{mmp_name}'
Lade folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf Daten zu nutze der letzten beiden Quartale .lade die frühesten Datensätze.Führe eine Multiplikation der Sätze durch
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche MetaMesspunkt '{mmp_name}'.
Benutze diese drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
 Hole Daten letztem Monat der drei Messpunkte.lade den ersten Datensatz.Berechne die Standardabweichung der Ergebnisse
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe Businesskey '{mmp_name}'
Greife auf drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Verwende den aktuellesten Datensatz. extrahiere Daten nutze aktuelles Halbjahr  .Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel Businesskey '{mmp_name}'
Referenziere drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per greife auf alle Daten zu letztem Monat der Messpunkte.nutze alle Datensätze.Berechne den kleinsten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte MetaMesspunkt '{mmp_name}'.
Erstelle drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Verwende die aktuellsten Datensätze. Lade Daten  letztes Jahr  .Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Erstelle diese angegeben drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
zum Lade Daten letztes Jahr .lade die letzten Datensätze.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere und verbinde Metamesspunkt '{mmp_name}'.
Lade drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
Hole Daten aller Messpunkte nutze der letzten zwei Halbjahre.Greife auf alle Datensätze zu.Berechne den größten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel Businesskey '{mmp_name}'
Greife auf  drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
Importiere die Daten  letztes Jahr .nutze den neusten Datensatz.Berechne die Standardabweichung der Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Gestalte und nutze '{mmp_name}'
Benutze folgende drei drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
 extrahiere Daten Quartal der drei Messpunkte.Verwende jeden Datensatz.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe und verknüpfe mit Metamesspunkt '{mmp_name}'.
Verwende diese drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
nutze den ersten Datensatz. Hole Daten  vorheriger Stichtag der drei Messpunkte.Addiere die Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Gestalte und verbinde '{mmp_name}'
Setze diese diese angegeben drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
nutze den neusten Datensatz. nutze die Daten  der letzten beiden Quartale aller Messpunkte.Berechne den kleinsten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Baue mir einen MetaMesspunkt mit nutze diesen '{mmp_name}'.
Setze diese  drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
nutze Lade Daten der letzten beiden Quartale aller Messpunkte.nutze den neusten Datensatz.Multipliziere die Ergebnisse
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Installiere und verbinde mit '{mmp_name}'
Erstelle folgende drei drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Lade Daten der Messpunkte  nutze letzter Stichtag.nutze den ersten Datensatz.Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Baue mir einen MetaMesspunkt mit verbinde mit '{mmp_name}'.
Lade Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per nutze die Daten aktuelles Quartal der drei Messpunkte.Greife auf den ersten Datensatz zu.Multipliziere die Datensätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Verwirkliche und verknüpfe '{mmp_name}'
Verwende folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze Importiere die Daten vor zwei Monaten der drei Messpunkte.nutze jeden Datensatz.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: benutze '{mmp_name}' und Entwerfe einen neuen Metamesspunkt
Erstelle folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Hole Daten der drei Messpunkte  zum der letzten drei Stichtage.lade die letzten Datensätze.Addiere die Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Baue einen Metamesspunkt und verbinde folgenden Registrierungsnamen '{mmp_name}'
Setze diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze jeden Datensatz. verwende die Daten zum vorletzter Stichtag der Messpunkte.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verbinde mit '{mmp_name}' und Baue einen neuen Metamesspunkt
Gebrauche folgende drei drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf alle Daten zu der Messpunkte nutze letztes Quartal.Verwende den ältesten Datensatz.Berechne den größten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere diesen neuen Metamesspunkt verweise auf '{mmp_name}'.
Setze diese  drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Lade Daten aller Messpunkte per aktuelles Halbjahr.lade jeden Datensatz.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte Businesskey '{mmp_name}'
Verwende diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Hole Daten nutze letztes Halbjahr .lade die letzten Datensätze.Berechne die Standardabweichung der Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verwende '{mmp_name}' und Implementiere einen neuen Metamesspunkt
Greife auf folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
 Lade Daten der letzten zwei Halbjahre aller Messpunkte.Greife auf den letzten Datensatz zu.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Bastel einen Metamesspunkt und nutze folgenden Registrierungsnamen '{mmp_name}'
Greife auf folgende drei drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze Lade Daten aktuelles Halbjahr .Verwende den ältesten Datensatz.Addiere die Sätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere Businesskey '{mmp_name}'
Benötigt werden drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze die Daten  der letzten zwei Halbjahre .nutze die neusten Datensätze.Aggregiere die Ergebnisse
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel MetaMesspunkt '{mmp_name}'.
Setze diese diese angegeben drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per nutze die Daten der letzten beiden Halbjahre .Verwende den ältesten Datensatz.Multipliziere die Messerte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere Businesskey '{mmp_name}'
Nutze Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze greife auf Daten zu vorheriges Halbjahr der drei Messpunkte.nutze den ersten Datensatz.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verbinde '{mmp_name}' und Erstelle einen neuen Metamesspunkt
Benötigt werden Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum verwende die Daten vorletzter Stichtag .nutze die neusten Datensätze.Aggregiere die Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Implementiere einen Metamesspunkt und verbinde folgenden Registrierungsnamen '{mmp_name}'
Nutze diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
verwende die Daten zum der letzten drei Jahren .lade alle Datensätze.Berechne den größten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Kreiere und referenziere mit '{mmp_name}'
Lade folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze die neusten Datensätze. Importiere die Daten zum Stichtag  .Berechne den kleinsten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte und verknüpfe Metamesspunkt '{mmp_name}'.
Benutze  drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
extrahiere Daten nutze vorheriger Stichtag .nutze die ersten Datensätze.Berechne die Standardabweichung der Fakten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Verwirkliche und benutze Metamesspunkt '{mmp_name}'.
Referenziere diese drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
Hole Daten  vorheriger Stichtag .nutze den ersten Datensatz.Berechne den kleinsten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Implementiere MetaMesspunkt '{mmp_name}'.
Benutze diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze jeden Datensatz. nutze die Daten  Quartal  .Bilde das Produkt aller Datensatz Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere und verweise auf Metamesspunkt '{mmp_name}'.
Nutze Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze jeden Datensatz. greife auf alle Daten zu  vorherigen Stichtag der drei Messpunkte.Berechne den kleinsten Messwert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere Businesskey '{mmp_name}'
Setze diese  drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
lade den letzten Datensatz. nutze die Daten  der letzten zwei Halbjahre  .Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verbinde mit '{mmp_name}' und Verwirkliche einen neuen Metamesspunkt
Referenziere drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
 nutze die Daten vorheriges Halbjahr .lade die letzten Datensätze.Berechne den kleinsten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bastel MetaMesspunkt '{mmp_name}'.
Benötigt werden drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Lade Daten der drei Messpunkte  per der letzten drei Jahren.nutze jeden Datensatz.Berechne die Standardabweichung der Fakten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1','YREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Installiere einen Metamesspunkt und benutze folgenden Registrierungsnamen '{mmp_name}'
Lade  drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
extrahiere Daten zum aktuellen und letzter Stichtag .lade die frühesten Datensätze.Aggregiere die Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Baue und nutze Metamesspunkt '{mmp_name}'.
Referenziere  drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
Importiere die Daten nutze vorheriger Stichtag .lade alle Datensätze.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verbinde '{mmp_name}' und Implementiere einen neuen Metamesspunkt
Benutze folgende drei drei Messpunkte '{mp1}' '{mp2}' '{mp3}'.
Lade Daten zum dieses Halbjahr .lade den letzten Datensatz.Berechne den größten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verknüpfe mit '{mmp_name}' und Erstelle einen neuen Metamesspunkt
Setze diese drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
verwende die Daten aller Messpunkte zum aktuellen Stichtag.lade alle Datensätze.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Verwende und verwende '{mmp_name}'
Gebrauche diese Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
verwende die Daten aller Messpunkte  nutze dieses Halbjahr.Verwende die ältesten Datensätze.Berechne den größten Wert
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Implementiere diesen neuen Metamesspunkt referenziere mit '{mmp_name}'.
Gebrauche drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
extrahiere Daten aller Messpunkte per letztes Jahr.lade alle Datensätze.Addiere die Daten
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: referenziere mit '{mmp_name}' und Bastel einen neuen Metamesspunkt
Referenziere drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
zum Lade Daten Vierteljahr .nutze die neusten Datensätze.Berechne den größten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Entwerfe und verknüpfe mit '{mmp_name}'
Nutze drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf alle Daten zu per vorheriges Quartal .lade den ersten Datensatz.Multipliziere die Messerte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Baue einen Metamesspunkt und verknüpfe mit folgenden Registrierungsnamen '{mmp_name}'
Lade Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
greife auf Daten zu der drei Messpunkte  per der letzten beiden Halbjahre.lade alle Datensätze.Berechne den größten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF','HREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF','HREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF','HREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MAX)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verknüpfe '{mmp_name}' und Verwende einen neuen Metamesspunkt
Benötigt werden Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Lade Daten per vorheriges Quartal .Greife auf alle Datensätze zu.Berechne die Standardabweichung der Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=STDEV)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Bastel einen Metamesspunkt und nutze folgenden Registrierungsnamen '{mmp_name}'
Nutze drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per extrahiere Daten vor zwei Monaten aller Messpunkte.lade die letzten Datensätze.Bilde das Produkt aller Datensatz Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Benötigt wird ein metamesspunkt. Verwirkliche und verwende '{mmp_name}'
Setze diese folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
verwende die Daten zum letztes Halbjahr .lade den ersten Datensatz.Bilde das Produkt aller Datensatz Werte
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: verwende '{mmp_name}' und Installiere einen neuen Metamesspunkt
Nutze drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Hole Daten der Messpunkte   der letzten zwei Jahren.Verwende den aktuellesten Datensatz.Aggregiere die Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['YREF','YREF-1], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['YREF','YREF-1], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['YREF','YREF-1], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe mir einen MetaMesspunkt mit verbinde mit '{mmp_name}'.
Verwende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze die neusten Datensätze. nutze die Daten nutze Stichtag der drei Messpunkte.Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere mir einen MetaMesspunkt mit verknüpfe '{mmp_name}'.
Greife auf drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
Greife auf alle Datensätze zu. extrahiere Daten nutze der letzten drei Stichtage  .Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Generiere mir einen MetaMesspunkt mit referenziere mit '{mmp_name}'.
Lade folgende Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
 verwende die Daten der letzten drei Stichtage aller Messpunkte.nutze jeden Datensatz.Aggregiere die Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=AGG)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte und verknüpfe mit Metamesspunkt '{mmp_name}'.
Referenziere folgende drei drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
nutze jeden Datensatz. Importiere die Daten nutze der letzten drei Stichtage  .Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere diesen neuen Metamesspunkt nutze diesen '{mmp_name}'.
Benötigt werden folgende Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
per Hole Daten dieses Halbjahr .lade die frühesten Datensätze.Berechne den kleinsten Datensatz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Bitte Baue einen Metamesspunkt und verknüpfe mit folgenden Registrierungsnamen '{mmp_name}'
Referenziere drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
Lade Daten  der letzten drei Stichtage .lade den ersten Datensatz.Multipliziere die Informationen
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Erstelle mir einen MetaMesspunkt mit nutze '{mmp_name}'.
Greife auf  drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Importiere die Daten per der letzten zwei Quartale .lade die frühesten Datensätze.Führe eine Multiplikation der Ergebnisse durch
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF','QREF-1'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF','QREF-1'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF','QREF-1'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Kreiere MetaMesspunkt '{mmp_name}'.
Erstelle drei Messpunkte '{mp1}', '{mp2}', '{mp3}'.
Hole Daten der drei Messpunkte  zum vorheriges Halbjahr.nutze die neusten Datensätze.Berechne den kleinsten Satz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['HREF-1'], range=LATEST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['HREF-1'], range=LATEST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['HREF-1'], range=LATEST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MIN)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Gestalte einen MetaMesspunkt mit folgendem Namen '{mmp_name}'.
Setze diese diese angegeben Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
 greife auf Daten zu vorheriges Quartal aller Messpunkte.nutze jeden Datensatz.Multipliziere die Datensätze
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['QREF-1'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['QREF-1'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['QREF-1'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=MULT)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Entwerfe und verbinde Metamesspunkt '{mmp_name}'.
Nutze folgende drei Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Lade Daten aller Messpunkte zum vorletzten Stichtag.Verwende jeden Datensatz.Berechne die Differenz
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF-2'], range=ALL)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF-2'], range=ALL)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF-2'], range=ALL)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
prompt: Installiere Businesskey '{mmp_name}'
Greife auf Messpunkte '{mp1}', '{mp2}' und '{mp3}'.
Hole Daten aller Messpunkte  nutze der letzten drei Stichtage.Greife auf den ersten Datensatz zu.Ziehe die Werte voneinander ab
template: 
code: #
#--------------------------------------------------------------------------
# SIMQL Template with three input measurements
# result is calculated via one compute data statement for all 
# input measurements
#--------------------------------------------------------------------------

mmp {mmp_alias} 
    
    register "{mmp_name}"
     
    section measurements: 
        vMP1 reference "{mp1}" 
        vMP2 reference "{mp2}" 
        vMP3 reference "{mp3}" 
 
    section variables: 
        define vTmp1, vTmp2, vTmp3, vResult 
         
    section logic: #all the logic goes here

        vTmp1 = LOAD DATA(ref=[vMP1], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vTmp2 = LOAD DATA(ref=[vMP2], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vTmp3 = LOAD DATA(ref=[vMP3], refdates=['CREF','CREF-1', 'CREF-2'], range=FIRST)
        vResult = COMPUTE DATA(variables=[vTmp1, vTmp2, vTmp3], math=DIFF)
    
    section result:
        save  vResult #save our final result
     
end 
;
|
#<END>-------------------------------------------------------------------------
Generiert wurden '{number_of_prompts}' eindeutige prompts
#------------------------------------------------------------------------------
